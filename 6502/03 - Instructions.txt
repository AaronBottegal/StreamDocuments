6502 INSTRUCTIONS
=================

Main instructions (also called opcodes, operation codes):
    LDA - Load A with a value.
    STA - Store the value in A somewhere.
    LDX - Load X with a value.
    LDY - Load Y with a value.
    STX - Store the value in X somewhere.
    STY - Store the value in Y somewhere.
    INX - Increase X by 1.
    INY - Increase Y by 1.
    DEX - Decrease X by 1.
    DEY - Decrease Y by 1.
    TAX - Transfer A to X.
    TAY - Transfer A to Y.
    TXA - Transfer X to A.
    TYA - Transfer Y to A.


Math opcodes:
    AND - Binary AND with the A register.
    ORA - Binary OR with the A register.
    EOR - Binary EOR with the A register.
    CMP - Compare A to something. All compares operate as if they subtract the register from the value, and set the status flags accordingily.
    CPX - Compare X to something.
    CPY - Compare Y to something.
    ADC - Add to the A register (With carry. If Carry is 1, adds 1 extra.)
    SBC - Subtract from the A register (With carry. If Carry is 0, subtracts 1 extra.)
    ASL - Arithmatic Shift Left (Multiply by 2) the A register. Brings #%0 into bit 0.
    LSR - Logical Shift Right (Divide by 2) the A register. Brings #%0 into bit 7.
    ROL - Rotate all bits in A left. Carry status is brought into bit 0.
    ROR - Rotate all bits in A right. Carry status is brought into bit 7.


Flow changing opcodes:
    JMP - Jumps to another piece of code, always done.
    JSR - Jump to a subroutine. Saves the next line of code to run and goes elsewhere to run code.
    RTS - Return from a subroutine. Comes back to where the subroutine was called and continues running.
    BEQ - Branch to other code if the last math operation equaled 0.
    BNE - Branch to other code if the last math operation was not equal to 0.
    BCS - Branch to other code if the last math operation had the carry set to 1.
    BCC - Branch to other code if the last math operation had the carry clear to 0.
    BMI - Branch to other code if the last math operation resulted in a negative number.
    BPL - Branch to other code if the last math operation resulted in a positive number.
    BVS - Branch to other code if the last (signed) math operation change sign.
    BVS - Branch to other code if the last (signed) math operation did not change sign.


Other opcodes:
    TXS - Transfer X to S.
    PHP - Push P to the stack.
    PHA - Push A to the stack.
    PLA - Pull A from the stack.
    PLP - Pull P from the stack.
    RTI - Return from Interrupt.


Processor status opcodes:
    SEC - Set carry status bit.
    CLC - Clear carry status bit.
    SEI - Set interrupt status bit (IRQ Disable)
    SED - Set decimal mode (Not available on the NES)
    CLD - Clear decimal status bit (Not available on the NES)
    CLI - Clear interrupt status bit (IRQ Enabled)
    CLV - Clear overflow status


REMEMBER: Instructions will change applicable processor status (P) bits automatically.
E.g. Simply loading a value will set the ZERO and SIGNED NEGATIVE bits automatically.