Extras
======

Compares
========

Compares are basically subtraction between the register and the target address/value.

This sets the appropriate status bits.


JSR + RTS
=========

How does the processor know where to return to?!

Answer: The stack. A JSR puts the next instructions address ahead of the JSR onto the stack.

When an RTS instruction is ran, the location that was JSR'd from gets returned to by pulling off the stack.


Why ADC + SBC?
==============

The 6502 sadly has no "normal" add and subtract instructions that simply add the value specified, regardless of the previous mathematical operation.

Instead, they exclusively use ADC, or "Add with Carry" and SBC, "Subtract with carry."

Because the carry flag plays a roll in both instructions, they always need to have the proper carry status when doing the initial add or subtract.

Before addition, the C flag needs cleared. Before subtraction, the C flag needs set. E.g. CLC / ADC, or SEC / SBC.

The reason for this is enabling 16-bit addition and subtraction, as if an overflow or underflow happens, the flag will make an addition add an extra one, or a subtraction will subtract one more value than specified if the flag is 0.

This enables 16-bit or more addition and subtraction through the 8-bit accumulator, as the results of the instruction output then determine if the next 8-bit ADC or SBC will take an extra value, bringing the last carry result across all operations.

E.g. SEC / SBC / SBC / SBC will carry the overflow from the previous SBC to the next throughout the whole chain.


Processor Status Bits
=====================

    Processor status bits:
        7  bit  0
        ---- ----
        NVss DIZC
        |||| ||||
        |||| |||+- Carry status.
        |||| ||+-- Zero status.
        |||| |+--- Interrupt Disable.
        |||| +---- Decimal Flag (Unavailable on the NES.)
        ||++------ No CPU effect, see: the B flag
        |+-------- Signed Overflow status.
        +--------- Unsigned Negative status flag.